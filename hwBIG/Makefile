# base borrowed from https://stackoverflow.com/a/1080019
debug ?= 0
ifeq ($(debug), 0)
    CFLAGS =-std=c++20 -Wall -pedantic -O2 -DPT
	LD=g++
else
    CFLAGS=-std=c++20 -Wall -pedantic -Werror -D_GLIBCXX_DEBUG -fsanitize=address -fsanitize=undefined -g -Og
# linker would otherwise scream at me
	LD=g++ -fsanitize=address -fsanitize=undefined
endif

# base borrowed from presentation slides
CXX=g++
OBJS= test.o CellPosition.o Expression.o Spreadsheet.o AST.o

all: acme_program
acme_program: $(OBJS)
	$(LD) -o $@ $^ -L./parser/x86_64-linux-gnu/ -lexpression_parser
clean:
	rm -f acme_program $(OBJS)
%.o: %.cpp
	$(CXX) $(CFLAGS) -c $<

%.o: src/%.cpp
	$(CXX) $(CFLAGS) -c $<

# generated by g++ -MM
test.o: test.cpp include/CellPosition.hpp include/Spreadsheet.hpp \
 include/Expression.hpp include/../parser/expression.h \
 include/CellPosition.hpp include/AST.hpp
AST.o: src/AST.cpp src/../include/AST.hpp
CellPosition.o: src/CellPosition.cpp src/../include/CellPosition.hpp
Expression.o: src/Expression.cpp src/../include/Expression.hpp \
 src/../include/../parser/expression.h src/../include/CellPosition.hpp \
 src/../include/AST.hpp src/../include/CellPosition.hpp \
 src/../include/AST.hpp
Spreadsheet.o: src/Spreadsheet.cpp src/../include/Spreadsheet.hpp \
 src/../include/Expression.hpp src/../include/../parser/expression.h \
 src/../include/CellPosition.hpp src/../include/AST.hpp \
 src/../include/CellPosition.hpp src/../include/Expression.hpp


