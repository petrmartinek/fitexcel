# base borrowed from https://stackoverflow.com/a/1080019
debug ?= 0
ifeq ($(debug), 0)
    CFLAGS =-std=c++20 -Wall -pedantic -O2
else
    CFLAGS=-std=c++20 -Wall -pedantic -Werror -D_GLIBCXX_DEBUG -fsanitize=address -fsanitize=undefined -g -Og
endif

# base borrowed from presentation slides
CXX=g++
LD=g++
OBJS= test.o CellPosition.o ExpressionBuilder.o Spreadsheet.o

all: acme_program
acme_program: $(OBJS)
	$(LD) -o $@ $^ -L/parser/x86_64-darwin23-g++/
clean:
	rm -f acme_program $(OBJS)
%.o: %.cpp
	$(CXX) $(CFLAGS) -c $<

# generated by g++ -MM
test.o: test.cpp parser/expression.h include/CellPosition.h \
	include/Spreadsheet.h include/CellPosition.h include/ExpressionBuilder.h \
	include/../parser/expression.h
CellPosition.o: src/CellPosition.cpp \
	src/../include/CellPosition.h
ExpressionBuilder.o: src/ExpressionBuilder.cpp \
	src/../include/ExpressionBuilder.h \
	src/../include/../parser/expression.h \
	src/../include/CellPosition.h
Spreadsheet.o: src/Spreadsheet.cpp \
	src/../include/Spreadsheet.h src/../include/CellPosition.h \
	src/../include/CellPosition.h src/../parser/expression.h \
	src/../include/ExpressionBuilder.h \
	src/../include/../parser/expression.h

